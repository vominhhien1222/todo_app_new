import 'package:flutter/material.dart';

class UserHomeScreen extends StatefulWidget {
  const UserHomeScreen({super.key});

  @override
  State<UserHomeScreen> createState() => _UserHomeScreenState();
}

class _UserHomeScreenState extends State<UserHomeScreen> {
  // Mock d·ªØ li·ªáu b·∫£n tin: c√≥ title, subtitle, tag ƒë·ªÉ l√™n m√†u chip.
  final List<Map<String, String>> _news = [
    {
      "title": "C·∫≠p nh·∫≠t Todos: Ho√†n th√†nh 3 task tr∆∞·ªõc 17:00",
      "subtitle": "Check l·∫°i ∆∞u ti√™n High/Medium ƒë·ªÉ k·ªãp deadline h√¥m nay.",
      "tag": "Todos",
    },
    {
      "title": "Th√¥ng b√°o: B·∫£o tr√¨ h·ªá th·ªëng 23:00‚Äì23:30",
      "subtitle": "·ª®ng d·ª•ng c√≥ th·ªÉ tho√°t ra trong th·ªùi gian c·∫≠p nh·∫≠t.",
      "tag": "Announcement",
    },
    {
      "title": "M·∫πo nƒÉng su·∫•t: Quy t·∫Øc 2 ph√∫t",
      "subtitle": "Vi·ªác n√†o < 2 ph√∫t, l√†m ngay ƒë·ªÉ ƒë·ª° t·ªìn ƒë·ªçng.",
      "tag": "Tips",
    },
  ];

  // Gi·∫£ l·∫≠p refresh 800ms cho m∆∞·ª£t (thay b·∫±ng load API/Firestore sau)
  Future<void> _onRefresh() async {
    await Future.delayed(const Duration(milliseconds: 800));
    if (!mounted) return;
    setState(() {
      _news.shuffle(); // ch·ªâ ƒë·ªïi th·ª© t·ª± , sau d√πng d·ªØ li·ªáu th·∫≠t
    });
  }

  String _greeting() {
    final hour = DateTime.now().hour;
    if (hour < 11) return "Ch√†o bu·ªïi s√°ng ‚òÄÔ∏è";
    if (hour < 14) return "Bu·ªïi tr∆∞a vui v·∫ª ü•ó";
    if (hour < 19) return "Bu·ªïi chi·ªÅu nƒÉng su·∫•t ‚ö°";
    return "Bu·ªïi t·ªëi th∆∞ gi√£n üåô";
    // B·∫°n c√≥ th·ªÉ thay b·∫±ng t√™n user: "Xin ch√†o, Th·∫£o üëã"
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final isDark = theme.brightness == Brightness.dark;

    // M√†u ch·ªß ƒë·∫°o nh·∫π nh√†ng, pha tr·ªôn ƒë·ªÉ "t∆∞∆°i t∆∞∆°i" (tr√°nh 1 m√†u).
    // - Teal (m√†u th∆∞∆°ng hi·ªáu)
    // - Indigo/Cyan ƒë·ªÉ t·∫°o chi·ªÅu s√¢u
    final Color accent = isDark ? Colors.tealAccent : Colors.teal;
    final Color subtle = isDark ? Colors.indigo.shade300 : Colors.indigo;
    final Color cyanish = isDark ? Colors.cyanAccent : Colors.cyan.shade400;

    return Scaffold(
      // AppBar nh·∫π, b·∫°n c√≥ th·ªÉ b·ªè n·∫øu d√πng BottomNav c√≥ ti√™u ƒë·ªÅ ri√™ng
      appBar: AppBar(
        elevation: 0,
        backgroundColor: theme.colorScheme.background,
        title: const Text("Trang ch√≠nh"),
        centerTitle: false,
      ),

      // K√©o xu·ªëng refresh list
      body: RefreshIndicator(
        color: accent,
        onRefresh: _onRefresh,
        child: ListView(
          padding: const EdgeInsets.fromLTRB(16, 8, 16, 24),
          children: [
            // -----------------------
            // 1) Banner JPG + overlay
            // -----------------------
            _BannerWithOverlay(
              isDark: isDark,
              accent: accent,
              cyanish: cyanish,
              subtle: subtle,
              // N·∫øu thi·∫øu asset => fallback b·∫±ng gradient
              assetPath: "assets/images/news_banner.jpg",
            ),
            const SizedBox(height: 16),

            // -----------------------
            // 2) L·ªùi ch√†o (greeting)
            // -----------------------
            Text(
              _greeting(),
              style: theme.textTheme.titleLarge?.copyWith(
                fontWeight: FontWeight.w700,
              ),
            ),
            const SizedBox(height: 6),
            Text(
              "C√πng m√¨nh ƒëi·ªÉm qua m·ªôt s·ªë c·∫≠p nh·∫≠t m·ªõi nh·∫•t nh√©.",
              style: theme.textTheme.bodyMedium?.copyWith(
                color: theme.textTheme.bodyMedium?.color?.withOpacity(0.8),
              ),
            ),
            const SizedBox(height: 16),

            // -----------------------
            // 3) D√≤ng ‚Äúnhanh tay‚Äù (quick chips)
            //    => t·∫°o ƒëi·ªÉm nh·∫•n m√†u m√® h∆°n 1 ch√∫t cho t∆∞∆°i
            // -----------------------
            _QuickActionChips(accent: accent, cyanish: cyanish, subtle: subtle),
            const SizedBox(height: 16),

            // -----------------------
            // 4) Danh s√°ch B·∫¢N TIN (Cards)
            // -----------------------
            Text(
              "B·∫£n tin g·∫ßn ƒë√¢y",
              style: theme.textTheme.titleMedium?.copyWith(
                fontWeight: FontWeight.w700,
              ),
            ),
            const SizedBox(height: 10),

            // List card tin t·ª©c
            ..._news.map(
              (item) => _NewsCard(
                title: item["title"]!,
                subtitle: item["subtitle"]!,
                tag: item["tag"]!,
                accent: accent,
              ),
            ),
          ],
        ),
      ),
    );
  }
}

/// Banner c√≥:
/// - ·∫¢nh PNG (assetPath)
/// - Gradient m·ªù overlay (teal + cyan + indigo) cho "t∆∞∆°i t∆∞∆°i"
/// - Fallback: n·∫øu l·ªói asset => hi·ªÉn th·ªã gradient thay th·∫ø (kh√¥ng crash)
class _BannerWithOverlay extends StatelessWidget {
  const _BannerWithOverlay({
    required this.isDark,
    required this.accent,
    required this.cyanish,
    required this.subtle,
    required this.assetPath,
  });

  final bool isDark;
  final Color accent;
  final Color cyanish;
  final Color subtle;
  final String assetPath;

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);

    return ClipRRect(
      borderRadius: BorderRadius.circular(18),
      child: Stack(
        alignment: Alignment.centerLeft,
        children: [
          // ·∫¢nh PNG l√†m n·ªÅn (errorBuilder => fallback)
          AspectRatio(
            aspectRatio: 16 / 9,
            child: Image.asset(
              assetPath,
              fit: BoxFit.cover,
              errorBuilder: (_, __, ___) {
                // N·∫øu thi·∫øu ·∫£nh, d√πng gradient thay th·∫ø
                return Container(
                  decoration: BoxDecoration(
                    gradient: LinearGradient(
                      colors: isDark
                          ? [Colors.teal.shade900, Colors.indigo.shade900]
                          : [Colors.teal.shade400, Colors.cyan.shade300],
                      begin: Alignment.topLeft,
                      end: Alignment.bottomRight,
                    ),
                  ),
                );
              },
            ),
          ),

          // Overlay gradient m·ªù (t·∫°o chi·ªÅu s√¢u + d·ªÖ ƒë·ªçc ch·ªØ)
          Positioned.fill(
            child: Container(
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [
                    // tr·ªôn nh·∫π teal + indigo + transparent
                    accent.withOpacity(isDark ? 0.30 : 0.20),
                    subtle.withOpacity(isDark ? 0.25 : 0.12),
                    Colors.transparent,
                  ],
                  begin: Alignment.centerLeft,
                  end: Alignment.centerRight,
                ),
              ),
            ),
          ),

          // Text gi·ªõi thi·ªáu
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16),
            child: RichText(
              text: TextSpan(
                style: theme.textTheme.titleLarge?.copyWith(
                  color: Colors.white,
                  shadows: const [
                    Shadow(
                      color: Colors.black26,
                      blurRadius: 6,
                      offset: Offset(0, 2),
                    ),
                  ],
                ),
                children: const [
                  TextSpan(text: "B·∫£n tin h√¥m nay\n"),
                  TextSpan(
                    text: "C·∫≠p nh·∫≠t m·ªõi, tips hay, v√† th√¥ng b√°o h·ªá th·ªëng",
                    style: TextStyle(fontSize: 14, fontWeight: FontWeight.w400),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}

/// D·∫£i chip h√†nh ƒë·ªông nhanh cho c·∫£m gi√°c "t∆∞∆°i" & ‚Äúapp-like‚Äù
/// - M√†u s·∫Øc ph·ªëi: teal/cyan/indigo nh·∫°t (c√≥ thay ƒë·ªïi light/dark)
class _QuickActionChips extends StatelessWidget {
  const _QuickActionChips({
    required this.accent,
    required this.cyanish,
    required this.subtle,
  });

  final Color accent;
  final Color cyanish;
  final Color subtle;

  @override
  Widget build(BuildContext context) {
    final chipStyle = Theme.of(
      context,
    ).textTheme.labelLarge?.copyWith(fontWeight: FontWeight.w600);

    return Wrap(
      spacing: 8,
      runSpacing: 8,
      children: [
        _ChipPill(
          text: "L·ªô tr√¨nh h√¥m nay",
          color: accent,
          textStyle: chipStyle,
        ),
        _ChipPill(text: "∆Øu ti√™n cao", color: cyanish, textStyle: chipStyle),
        _ChipPill(text: "Th√¥ng b√°o m·ªõi", color: subtle, textStyle: chipStyle),
      ],
    );
  }
}

class _ChipPill extends StatelessWidget {
  const _ChipPill({required this.text, required this.color, this.textStyle});

  final String text;
  final Color color;
  final TextStyle? textStyle;

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 14, vertical: 8),
      decoration: BoxDecoration(
        color: color.withOpacity(0.16),
        borderRadius: BorderRadius.circular(999),
        border: Border.all(color: color.withOpacity(0.28)),
      ),
      child: Text(
        text,
        style: (textStyle ?? const TextStyle()).copyWith(color: color),
      ),
    );
  }
}

/// Card hi·ªÉn th·ªã 1 b·∫£n tin:
/// - Tag chip (m√†u theo accent)
/// - Title + subtitle
/// - N·ªÅn pastel nh·∫°t t√πy theme
class _NewsCard extends StatelessWidget {
  const _NewsCard({
    required this.title,
    required this.subtitle,
    required this.tag,
    required this.accent,
  });

  final String title;
  final String subtitle;
  final String tag;
  final Color accent;

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final isDark = theme.brightness == Brightness.dark;

    return Container(
      margin: const EdgeInsets.only(bottom: 12),
      decoration: BoxDecoration(
        color: isDark ? Colors.blueGrey.shade900 : Colors.teal.shade50,
        borderRadius: BorderRadius.circular(14),
        boxShadow: [
          BoxShadow(
            color: isDark
                ? Colors.black.withOpacity(0.25)
                : Colors.teal.shade200.withOpacity(0.25),
            blurRadius: 10,
            offset: const Offset(0, 6),
          ),
        ],
        border: Border.all(
          color: isDark ? Colors.white10 : Colors.teal.shade100,
        ),
      ),
      child: ListTile(
        contentPadding: const EdgeInsets.fromLTRB(14, 12, 14, 12),
        leading: CircleAvatar(
          backgroundColor: accent.withOpacity(0.18),
          foregroundColor: accent,
          child: const Icon(Icons.article_outlined),
        ),
        title: Text(
          title,
          style: theme.textTheme.titleSmall?.copyWith(
            fontWeight: FontWeight.w700,
          ),
        ),
        subtitle: Padding(
          padding: const EdgeInsets.only(top: 4.0),
          child: Text(subtitle, style: theme.textTheme.bodySmall),
        ),
        trailing: Container(
          padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 6),
          decoration: BoxDecoration(
            color: accent.withOpacity(0.14),
            borderRadius: BorderRadius.circular(999),
            border: Border.all(color: accent.withOpacity(0.25)),
          ),
          child: Text(
            tag,
            style: TextStyle(
              color: accent,
              fontWeight: FontWeight.w600,
              fontSize: 12,
              letterSpacing: 0.2,
            ),
          ),
        ),
        onTap: () {
          // TODO: sau n√†y ƒëi·ªÅu h∆∞·ªõng sang user_detail_screen.dart (Hero + slide)
          // Navigator.push(context, MaterialPageRoute(builder: (_) => const UserDetailScreen(...)));
          ScaffoldMessenger.of(
            context,
          ).showSnackBar(SnackBar(content: Text("ƒêang m·ªü: $tag")));
        },
      ),
    );
  }
}
